{"version":3,"sources":["components/Navigation/Navigation.js","components/Logo/brain.png","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","components/FaceRecognition/FaceRecognition.js","components/SignIn/SignIn.js","components/Register/Register.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Navigation","onRouteChange","isSignedIn","onClick","className","Logo","options","max","src","logo","alt","ImageLinkForm","onInputChange","onButtonSubmit","id","type","onChange","Rank","name","entries","toUpperCase","FaceRecognition","boxes","imageUrl","isValidInput","width","height","map","box","style","top","topRow","bottom","botRow","left","leftCol","right","rightCol","SignIn","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","res","json","data","loadUser","approvedLogIn","this","htmlFor","href","Component","Register","onNameChange","onRegisterSubmit","user","console","log","app","Clarifai","App","apiKey","particlesOptions","particles","number","density","enable","value_area","joined","route","input","onPictureSubmit","models","predict","FACE_DETECT_MODEL","video","res_entries","Object","assign","displayFaceBox","claculateFacesLocation","catch","resp","clarifaiFaceRegions","outputs","regions","image","document","getElementById","region","region_info","bounding_box","getFaceBox","imgWidth","imgHeight","left_col","right_col","top_row","bottom_row","params","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.80027169.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Navigation.css'\r\n\r\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\r\n    if (isSignedIn) {\r\n        return(\r\n            <nav>\r\n                <p onClick={ () => onRouteChange('signIn') } className='f3 _pa2 black underline link dim pointer'>Sign Out</p>\r\n            </nav>\r\n        );\r\n    } else {\r\n        return(\r\n            <nav>\r\n                <p onClick={ () => onRouteChange('signIn') } className='f3 _pa2 black underline link dim pointer'>Sign In</p>\r\n                <p onClick={ () => onRouteChange('register') } className='f3 _pa2 black underline link dim pointer'>Register</p>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navigation;","export default __webpack_public_path__ + \"static/media/brain.f61be25e.png\";","import React from 'react';\r\nimport Tilt from 'react-tilt'\r\nimport logo from './brain.png';\r\nimport './Logo.css';\r\nimport { render } from '@testing-library/react';\r\n\r\nconst Logo = () =>  {\r\n    return(\r\n        <div className=\"ma4 mt0\">\r\n            <Tilt className=\"Tilt br3 shadow-2\" options={{ max : 55 }}>\r\n                 <div className=\"Tilt-inner\"> \r\n                    <img src = {logo} alt = 'brain'/>   \r\n                 </div>\r\n            </Tilt>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './ImageLinkForm.css';\r\n\r\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\r\n    return(\r\n        <div>\r\n            <p className='pt3 f3 center'>\r\n                {'This Magic Brain will detect faces in your pictures. Git it a try.'}\r\n            </p>\r\n            <div className=\"\">\r\n                 <div className='center form pa4 br3 shadow-5'>\r\n                    <input id='imgLink' className ='w-70 f4 pa2 br2' type='text' \r\n                        onChange={onInputChange}\r\n                    />\r\n                    <button \r\n                        id='detect'\r\n                        className='w-30 grow f4 ph3 link pv2 white br2' \r\n                        onClick={onButtonSubmit}\r\n                    >Detect</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImageLinkForm;\r\n","import React from 'react';\r\n\r\nconst Rank = ({ name, entries }) => {\r\n    return(\r\n        <div className>\r\n            <div className='center white f3 pt3'>\r\n                {`${name.toUpperCase()}, your current entry count is ...`}\r\n            </div>\r\n            <div className='center white f1'>\r\n                {`#${entries}`}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\nimport './FaceRecognition.css'\r\n\r\nconst FaceRecognition = ({ boxes, imageUrl, isValidInput }) => {\r\n    if (isValidInput) {\r\n        return(\r\n            <div className='center pa4 br3'>\r\n                <div className='absolute'>\r\n                    <img id='inputImage' src={ imageUrl } alt='' width='600px' height='auto' />\r\n                    {\r\n                        boxes.map(box => {\r\n                            return(\r\n                                <div className='bounding-box' style={{ top:box.topRow, \r\n                                    bottom: box.botRow, left: box.leftCol, right: box.rightCol }}>\r\n                                </div>\r\n                            );\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return(\r\n            <div className='f2 tc pa4 fw6'>\r\n                {'Enter a valid Url!'}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n    \r\nexport default FaceRecognition;","import React, { Component } from 'react';\r\nimport './SignIn.css'\r\n\r\nclass SignIn extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            signInEmail: '',\r\n            signInPassword: '',\r\n            approvedLogIn: '',\r\n        };\r\n    }\r\n\r\n    onEmailChange = (event) => {\r\n        this.setState({ signInEmail: event.target.value })\r\n    }\r\n\r\n    onPasswordChange = (event) => {\r\n        this.setState({ signInPassword: event.target.value })\r\n    }\r\n\r\n    onSubmitSignIn = () => {\r\n        fetch('http://localhost:5000/signin', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                email: this.state.signInEmail,\r\n                password: this.state.signInPassword\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.id) {\r\n                this.props.loadUser(data);\r\n                this.setState({ approvedLogIn: true });\r\n                this.props.onRouteChange('home')\r\n            } else {\r\n                this.setState({ approvedLogIn: false });\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { onRouteChange } = this.props;\r\n        return(\r\n            <article className=\"br3 ba b--black-10 mv6 w-50-m w-25-l center\">\r\n                <main className=\"pa5 black-80 w-90\">\r\n                    <div className=\"measure\">\r\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                            <legend className=\"f1 fw6 ph0 mh0 tc\">Sign In</legend>\r\n                            <div className=\"mt3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                                <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                                       type=\"email\" name=\"email-address\"  id=\"email-address\"\r\n                                       onChange={this.onEmailChange} />\r\n                            </div>\r\n                            <div className=\"mv3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                                <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                                       type=\"password\" name=\"password\"  id=\"password\"\r\n                                       onChange={this.onPasswordChange} />\r\n                            </div>\r\n                        </fieldset>\r\n\r\n                        <div className='tc pb3 fw6'>{ this.state.approvedLogIn === false ? 'The username or password is incorrect' : null }</div>\r\n\r\n                        <div className=\"center\">\r\n                            <input className=\"ph3 pv2 input-reset ba2 b--black bg-transparent grow pointer f6 fw9\"\r\n                                    type=\"submit\" value=\"Sign In\"\r\n                                    onClick={this.onSubmitSignIn} />\r\n                        </div>\r\n                        <div className=\"lh-copy mt3\">\r\n                            <a onClick={() => onRouteChange('register')} href=\"#0\" className=\"f5 link dim black db tc\">Register</a>\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </article>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignIn;","import React, { Component } from 'react';\r\nimport './Register.css'\r\n\r\nclass Register extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n        }\r\n    }\r\n\r\n    onNameChange = (event) => {\r\n        this.setState({ name: event.target.value })\r\n    }\r\n\r\n    onEmailChange = (event) => {\r\n        this.setState({ email: event.target.value })\r\n    }\r\n\r\n    onPasswordChange = (event) => {\r\n        this.setState({ password: event.target.value })\r\n    }\r\n\r\n    onRegisterSubmit = () => {\r\n        const { name, email, password } = this.state;\r\n\r\n        fetch('http://localhost:5000/register', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                name: name,\r\n                email: email,\r\n                password: password,\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(user => {\r\n            if (user.id) {\r\n                this.props.loadUser(user);\r\n                this.props.onRouteChange('home'); \r\n                console.log(user);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <article className=\"br3 ba b--black-10 mv6 w-50-m w-25-l center\">\r\n                <main className=\"pa5 black-80 w-90\">\r\n                    <div className=\"measure\">\r\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                            <legend className=\"f1 fw6 ph0 mh0 tc\">Register</legend>\r\n                            <div className=\"mt3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"user-name\">Name</label>\r\n                                <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                                       type=\"text\" name=\"user-name\"  id=\"user-name\"\r\n                                       onChange={this.onNameChange} />\r\n                            </div>\r\n                            <div className=\"mt3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                                <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                                       type=\"email\" name=\"email-address\"  id=\"email-address\"\r\n                                       onChange={this.onEmailChange} />\r\n                            </div>\r\n                            <div className=\"mv3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                                <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                                       type=\"password\" name=\"password\"  id=\"password\"\r\n                                       onChange={this.onPasswordChange} />\r\n                            </div>\r\n                        </fieldset>\r\n                        <div className=\"center\">\r\n                            <input className=\"ph3 pv2 input-reset ba2 b--black bg-transparent grow pointer f6 fw9\"\r\n                                   type=\"submit\" value=\"Register\"\r\n                                   onClick={this.onRegisterSubmit} />\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </article>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Register;","import React, {Component} from 'react';\r\nimport Particles from 'react-particles-js';\r\nimport Clarifai from 'clarifai';\r\nimport Navigation from '../components/Navigation/Navigation';\r\nimport Logo from '../components/Logo/Logo';\r\nimport ImageLinkForm from '../components/ImageLinkForm/ImageLinkForm';\r\nimport Rank from '../components/Rank/Rank';\r\nimport FaceRecognition from '../components/FaceRecognition/FaceRecognition';\r\nimport SignIn from '../components/SignIn/SignIn';\r\nimport Register from '../components/Register/Register';\r\nimport './App.css';\r\n\r\nconst app = new Clarifai.App({\r\n  apiKey: '00b066ae3ef849029ca6a781a5a8f07b'\r\n});\r\n\r\nconst particlesOptions = {\r\n  particles: {\r\n      number: {\r\n        value: 90,\r\n        density: {\r\n          enable: true,\r\n          value_area: 800\r\n        }\r\n      }\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      input: '',\r\n      imageUrl: '',\r\n      isValidInput: true,\r\n      boxes: [],\r\n      route: 'signIn',\r\n      isSignedIn: false,\r\n      user: {\r\n        id: '',\r\n        name: '',\r\n        email: '',\r\n        entries: 0,\r\n        joined: ''\r\n      }\r\n    }\r\n  }\r\n\r\n  loadUser = (data) => {\r\n    this.setState({ user: {\r\n        id: data.id,\r\n        name: data.name,\r\n        email: data.email,\r\n        entries: data.entries,\r\n        joined: data.joined,\r\n      }\r\n    })\r\n  }\r\n\r\n  onRouteChange = (route) => {\r\n    if (route === 'home') {\r\n      this.setState({ isSignedIn: true });\r\n    } else if (route === 'signIn') {\r\n      this.setState({ isSignedIn: false });\r\n    }\r\n\r\n    this.setState({ route: route });\r\n  }\r\n\r\n  onInputChange = (event) => {\r\n    this.setState({ input: event.target.value })\r\n  }\r\n\r\n  onPictureSubmit = () => {\r\n    this.setState({ imageUrl: this.state.input, isValidInput: true })\r\n\r\n    app.models.predict(Clarifai.FACE_DETECT_MODEL,\r\n      this.state.input, {video: false})\r\n    .then(res => {\r\n      if (res) {\r\n        fetch('http://localhost:5000/image', {\r\n          method: 'put',\r\n          headers: {'Content-Type': 'application/json'},\r\n          body: JSON.stringify({\r\n            id: this.state.user.id\r\n          })\r\n        })\r\n        .then(res => res.json())\r\n        .then(res_entries => {\r\n          this.setState(\r\n            Object.assign(this.state.user, {entries: res_entries} )\r\n          );\r\n        })\r\n      }\r\n\r\n      this.displayFaceBox(this.claculateFacesLocation(res))\r\n    })\r\n    .catch(() => this.setState({ isValidInput: false }));\r\n  }\r\n\r\n  claculateFacesLocation = (resp) => {\r\n    const clarifaiFaceRegions = resp.outputs[0].data.regions;\r\n    const image = document.getElementById('inputImage');\r\n    const width = image.width;\r\n    const height = image.height;\r\n\r\n    const boxes = clarifaiFaceRegions.map(region => {\r\n      const box = region.region_info.bounding_box;\r\n      return this.getFaceBox(box, width, height);\r\n    });\r\n\r\n    return boxes;\r\n  }\r\n\r\n  getFaceBox = (box, imgWidth, imgHeight) => {\r\n    return ({\r\n      leftCol: box.left_col * imgWidth,\r\n      rightCol: imgWidth - (box.right_col * imgWidth),\r\n      topRow: box.top_row * imgHeight,\r\n      botRow: imgHeight - (box.bottom_row * imgHeight),\r\n    });\r\n  }\r\n\r\n  displayFaceBox = (boxes) => {\r\n    // this.setState({ boxes }) ES6 features instead of boxes: boxes\r\n    this.setState({ boxes: boxes })\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const { isSignedIn, imageUrl, route, boxes, isValidInput } = this.state;\r\n    return (\r\n      <div>\r\n        <Particles className='particles' params={particlesOptions} />\r\n        <Navigation onRouteChange={this.onRouteChange} isSignedIn={isSignedIn}/>\r\n        { route === 'home'\r\n          ? <div>\r\n              <Logo/>\r\n              <Rank name={this.state.user.name} entries={this.state.user.entries}/>\r\n              <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onPictureSubmit}/>\r\n              <FaceRecognition boxes={boxes} imageUrl={imageUrl} isValidInput={isValidInput}/>\r\n            </div>\r\n          : (\r\n              route === 'signIn'\r\n              ? <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\r\n              : <Register loadUser = {this.loadUser} onRouteChange={this.onRouteChange} />\r\n          )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport tachyons from 'tachyons';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}